@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

*{
  box-sizing:border-box;
  margin:0;
  padding:0;
  list-style:none;
}

html{
  font-family:"Roboto", sans-serif;
  font-size:16px;
  font-weight:400;
  line-height:1.64;
}

.visually-hidden{
  position:absolute;
  visibility:hidden;
  overflow:hidden;
  clip:rect(0, 0, 0, 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  white-space:nowrap;
  border:0;
  clip-path:inset(100%);
}

.container{
  width:min(100% - 20px * 2, 1110px);
  margin-inline:auto;
}

.container-sm{
  width:min(100% - 20px * 2, 540px);
  margin-inline:auto;
}

h1{
  font-size:3rem;
  font-weight:500;
  line-height:1.4;
}

h2{
  font-size:2rem;
  font-weight:500;
  line-height:1.4;
}

a{
  text-decoration:none;
  color:#000000;
}

.header{
  background-color:rgb(238, 239, 241);
  padding-top:79px;
  padding-bottom:140px;
}
.navbar__list{
  display:flex;
  flex-wrap:wrap;
  gap:51px;
}
.navbar__link{
  letter-spacing:0.1em;
}
.navbar__link--active{
  color:rgb(52, 84, 122);
  font-weight:500;
}

.hero{
  display:flex;
  align-items:flex-start;
  flex-direction:column;
}
.hero__title{
  margin-bottom:2.5rem;
}
.hero__description{
  margin-bottom:3.5625rem;
  align-items:flex-start;
  color:rgb(114, 114, 114);
}
.hero__btn{
  display:flex;
  align-items:center;
  justify-content:center;
  min-width:225px;
  min-height:65px;
  padding:19px;
  letter-spacing:0.1em;
  text-transform:uppercase;
  color:#ffffff;
  background-color:rgb(52, 84, 122);
}

.about{
  background-color:#ffffff;
  padding-top:100px;
  padding-bottom:100px;
  text-align:center;
}
.about__title{
  margin-bottom:2.3125rem;
}
.about__description{
  color:rgb(114, 114, 114);
}

.experience{
  padding-top:100px;
  padding-bottom:92px;
  color:#ffffff;
  background-color:rgb(52, 84, 122);
}
.experience__container{
  display:flex;
  flex-wrap:wrap;
  gap:calc(20px * 2);
  justify-content:space-between;
}
.experience__item{
  display:flex;
  gap:20px;
}
.experience-description{
  margin-top:-0.5rem;
}
.experience-number{
  margin-bottom:0.125rem;
  font-size:21px;
  font-weight:500;
}
.experience-picture{
  order:-1;
}

.process{
  height:309.5px;
  background-color:rgb(238, 239, 241);
  padding-top:100px;
  padding-bottom:100px;
  text-align:center;
}
.process__title{
  margin-bottom:2.3125rem;
}
.process__description{
  color:rgb(114, 114, 114);
}

.video{
  background-color:rgb(238, 239, 241);
}
.video__iframe{
  width:100%;
  height:auto;
  min-height:200px;
  margin-bottom:5.75rem;
  border:0;
  aspect-ratio:16/9;
}

.footer{
  padding-top:50px;
  padding-bottom:50px;
  color:#ffffff;
  background-color:rgb(52, 84, 122);
}
.footer__title{
  margin-bottom:0.4375rem;
  font-size:21px;
  font-weight:500;
}
.footer__description{
  font-size:13px;
}
@media (576px ≤ width < 992px){
  .navbar{
    margin-bottom:90px;
  }
}
@media (768px ≤ width){
  .hero{
    align-items:flex-start;
    max-width:540px;
  }
}
@media (width ≤ 768px){
  .navbar{
    justify-content:center;
  }
  .hero{
    align-items:center;
    text-align:center;
  }
}
@media (992px ≤ width){
  .navbar{
    margin-bottom:117px;
  }
  .experience__container{
    justify-content:space-between;
  }
}
@media (width < 992px){
  .header{
    padding-bottom:71px;
  }
  .experience__container{
    justify-content:space-evenly;
  }
}
@media (width < 576px){
  .navbar{
    margin-bottom:50px;
  }
  .about{
    padding-top:50px;
    padding-bottom:50px;
  }
  .process{
    padding-top:50px;
    padding-bottom:50px;
  }
}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
